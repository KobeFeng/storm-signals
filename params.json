{"name":"Storm-signals","body":"## Storm-Signals\r\nStorm-Signals aims to provide a way to send messages (\"signals\") to components (spouts/bolts) in a storm topology that are otherwise not addressable. \r\n\r\nStorm topologies can be considered static in that modifications to a topology's behavior require redeployment. Storm-Signals provides a simple way to modify a topology's behavior at runtime, without redeployment.\r\n\r\n\r\n### Project Location\r\nPrimary development of storm-signals will take place at: \r\nhttps://github.com/ptgoetz/storm-signals\r\n\r\nPoint/stable (non-SNAPSHOT) release souce code will be pushed to:\r\nhttps://github.com/nathanmarz/storm-contrib\r\n\r\nMaven artifacts for releases will be available on maven central.\r\n\r\n\r\n\r\n\r\n### Use Cases\r\nTypical storm spouts run forever (until undeployed), emitting tuples based on an underlying, presumably event-driven, data source/stream.\r\n\r\nSome storm users have expressed an interest in having more control over that pattern, for instance in situations where the data stream is not open-ended, or where the situation requires that data streams be controllable (i.e. the ability to start/stop/pause/resume processing).\r\n\r\nStorm-Signals provides a very simple mechanism for communicating with spouts deployed within a storm topology. The communication mechanism resides outside of storm's basic stream processing paradigm (i.e. calls to `nextTuple()` and the tuple ack/fail mechanism).\r\n\r\nSignals (messages)\r\n\r\n#### Sample Use Cases\r\n\r\n* Ability to start/stop/pause/resume a spout from a process _external to_ the storm topology.\r\n* Ability to change the source of a spout's stream without redeploying the topology.\r\n* Initiating processing of a set/batch of data based on a schedule (such as a Quartz or cron job)\r\n* Periodically sending a dynamic SQL query to a spout that emits tuples for processing.\r\n* Any other use case you can think of. :)\r\n\r\n## Usage\r\n\r\n### Spout Implementation\r\nCurrently (Version 0.1.0) provides a basic abstract `BaseRichSpout` implementation that must be subclassed:\r\n\r\n`backtype.storm.contrib.signals.spout.BaseSignalSpout`\r\n\r\nSubclasses _must_ override the `onSignal()` method:\r\n\r\n\tprotected abstract void onSignal(byte[] data);\r\n\r\nThis method is called when a signal is sent to a spout. The signal payload is a `byte[]` that can contain anything (string, data, seriliazed object(s), etc.).\r\n\r\nSubclasses _must_ override the superclass constructor:\r\n\r\n\tpublic TestSignalSpout(String name) {\r\n\t    super(name);\r\n\t}\r\n\t\r\nThe `name` parameter provides a unique ID for the spout that allows `SingalClient`s to address the bolt and send it messages.\r\n\r\nSubclasses _must_ call `super.open()` if they override the `open()` method: \r\n\r\n\t@Override\r\n\tpublic void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {\r\n\t    super.open(conf, context, collector);\r\n\t}\r\n\r\nFailure to do so will prevent the spout from receiving signals (i.e. `onSignal()` will never be called).\r\n\r\n### Signal Client\r\n\r\nThe `SignalClient` constructor requires two arguments:\r\n\r\n1. a zookeeper connect string (\"host1:port1,host2:port2,hostN:portN\") that should match the storm zookeeper configuration\r\n2. a name string (this should match the name used to construct the `BaseSignalSpout` subclass)\r\n\t\r\nExample:\r\n\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t    SignalClient sc = new SignalClient(\"localhost:2181\", \"test-signal-spout\");\r\n\t    sc.start();\r\n\t    try {\r\n\t        sc.send(\"Hello Signal Spout!\".getBytes());\r\n\t    } finally {\r\n\t        sc.close();\r\n\t    }\r\n\t}\r\n\r\n\r\n## Maven Usage\r\n\r\n### Maven Dependency\r\n\r\nPoint (non-SNAPSHOT) releases will be available on maven central.\r\n\r\n\t<dependency>\r\n\t\t<groupId>com.github.ptgoetz</groupId>\r\n\t\t<artifactId>storm-signals</artifactId>\r\n\t\t<version>0.1.0</version>\r\n\t</dependency>\r\n\r\n\r\n\r\n","tagline":"Storm primitives to allow out-of-band messaging to storm spouts and bolts.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}